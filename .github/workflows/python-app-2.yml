# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app
        
    steps:
    # - name: Install Poetry Action
    # You may pin to the exact commit or the version.
    # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
    #  uses: snok/install-poetry@v1.3.4
    #  with:
        # The Poetry version to install
    #    version: latest
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.1"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH=$PATH:$HOME/.local/bin
        poetry install --no-root
  formatter:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run formatter
        run: poetry run task formatter

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run security checks
        run: poetry run task security

  lint:
    runs-on: ubuntu-latest
    needs: [formatter, security]
    steps:
      - name: Run linting
        run: poetry run task lint

  unittests:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Run tests
        run: poetry run task test
